<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotDeleteCurveBecauseHasOperators" xml:space="preserve">
    <value>Curve '{0}' kan niet worden verwijderd, omdat het in gebruik is door operators.</value>
    <comment>{0} = name</comment>
  </data>
  <data name="CannotDeletePatchBecauseIsMainPatch" xml:space="preserve">
    <value>Schakeling '{0}' kan niet worden verwijderd, omdat het de hoofdschakeling is van het document.</value>
    <comment>{0} = name</comment>
  </data>
  <data name="CannotDeleteSampleBecauseHasOperators" xml:space="preserve">
    <value>Geluidsfragment '{0}' kan niet worden verwijderd, omdat het in gebruik is door operators.</value>
    <comment>{0} = name</comment>
  </data>
  <data name="ChannelCountDoesNotMatchSpeakerSetup" xml:space="preserve">
    <value>Het aantal kanalen komt niet overeen met de luidspreker opstelling.</value>
  </data>
  <data name="ChannelIndexNumberDoesNotMatchSpeakerSetup" xml:space="preserve">
    <value>Kanaalnummer komt niet overeen met luidspreker opstelling.</value>
  </data>
  <data name="UnderlyingDocumentIsCircular" xml:space="preserve">
    <value>Er is een cirkelverband met het onderliggende document.</value>
    <comment>{0} = name</comment>
  </data>
  <data name="CustomOperatorInletWithNameNotFoundInDocumentMainPatch" xml:space="preserve">
    <value>Ingang '{0}' niet gevonden in de hoofdschakeling van het geassocieerde document.</value>
    <comment>{0} = name</comment>
  </data>
  <data name="CustomOperatorOutletWithNameNotFoundInDocumentMainPatch" xml:space="preserve">
    <value>Uitgang '{0}' niet gevonden in de hoofdschakeling van het geassocieerde document.</value>
    <comment>{0} = name</comment>
  </data>
  <data name="DocumentIsDependentOnDocument" xml:space="preserve">
    <value>Document '{0}' is afhankelijk van document '{1}'.</value>
    <comment>{0} = dependent document, {1} = dependent on document</comment>
  </data>
  <data name="InletNamesAreNotUnique" xml:space="preserve">
    <value>De ingang namen zijn niet uniek.</value>
  </data>
  <data name="InletNotSet" xml:space="preserve">
    <value>{2} is niet ingevuld voor {0} operator genaamd '{1}'.</value>
  </data>
  <data name="NotFoundInList_WithItemName_AndID" xml:space="preserve">
    <value>{0} met ID '{1}' niet gevonden in de lijst.</value>
    <comment>{0} = name, {1} = id</comment>
  </data>
  <data name="NotFoundInList_WithItemName_ID_AndListName" xml:space="preserve">
    <value>{0} met ID '{1}' niet gevonden in de lijst van {2}.</value>
    <comment>{0} = name, {1} = id, {2} = name plural</comment>
  </data>
  <data name="NotFound_WithTypeName_AndName" xml:space="preserve">
    <value>{0} genaamd '{1}' niet gevonden.</value>
    <comment>{0} = type of object, e.g. 'Recipe', {1} = name of object, e.g. 'eggs and bacon'</comment>
  </data>
  <data name="ObjectAmplifier0" xml:space="preserve">
    <value>Versterking van '{0}' genaamd '{1}' is 0.</value>
  </data>
  <data name="OperatorInletCountNotEqualToDocumentMainPatchInletCount" xml:space="preserve">
    <value>Aantal uitgangen van de operator is niet gelijk aan het aantal uitgangen van de hoofdschakeling van het document waar het naar verwijst.</value>
  </data>
  <data name="OperatorIsCircularWithName" xml:space="preserve">
    <value>Operator genaamd '{0}' heeft een cirkelverwijzing.</value>
  </data>
  <data name="OperatorOutletCountNotEqualToDocumentMainPatchOutletCount" xml:space="preserve">
    <value>Aantal ingangen van de operator is niet gelijk aan het aantal ingangen van de hoofdschakeling van het document waar het naar verwijst.</value>
  </data>
  <data name="OperatorPatchIsNotTheExpectedPatch" xml:space="preserve">
    <value>De patch van operator '{0}' is ingevuld, maar het is niet de verwachte patch '{1}'.</value>
    <comment>{0} = operator name, {1} = patch name</comment>
  </data>
  <data name="OutletNamesAreNotUnique" xml:space="preserve">
    <value>De uitgang namen zijn niet uniek.</value>
  </data>
  <data name="ParentDocumentAndChildDocumentTypeShouldBothBeNullOrBothFilledIn" xml:space="preserve">
    <value>Bovenliggend document en type onderliggend document moeten ofwel beide ingevuld zijn ofwel beide leeg.</value>
  </data>
  <data name="SampleCount0" xml:space="preserve">
    <value>Geluidsfragment '{0}' heeft geen data.</value>
  </data>
  <data name="SampleNotActive" xml:space="preserve">
    <value>Geluidsfragment genaamd '{0}' is niet actief.</value>
  </data>
  <data name="SampleNotLoaded" xml:space="preserve">
    <value>Geluidsfragment '{0} is niet ingeladen.</value>
  </data>
  <data name="UnderlyingDocumentMainPatchIsNull" xml:space="preserve">
    <value>Dit onderliggend document heeft geen hoofdschakeling en kan daarom niet worden gekozen.</value>
  </data>
  <data name="UnsupportedOperatorTypeEnumValue" xml:space="preserve">
    <value>Operator type '{0}' wordt niet ondersteund.</value>
  </data>
  <data name="NumberIs0WithName" xml:space="preserve">
    <value>Getal genaamd '{0}' is 0.</value>
  </data>
  <data name="InletSortOrdersAreNotUnique" xml:space="preserve">
    <value>De ingang volgnummers zijn niet uniek.</value>
  </data>
  <data name="OutletSortOrdersAreNotUnique11" xml:space="preserve">
    <value>De uitgang volgnummers zijn niet uniek.</value>
  </data>
  <data name="CannotDeleteBecauseHasReferences" xml:space="preserve">
    <value>Het item kan niet worden verwijderd, omdat er nog verwijzingen naar bestaan.</value>
  </data>
  <data name="ScaleNamesNotUnique" xml:space="preserve">
    <value>Toonladder namen zijn niet uniek.</value>
  </data>
</root>