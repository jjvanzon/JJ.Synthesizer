<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{58794EC8-775B-4EA6-A12C-F330AB03B0F8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>JJ.Demos.Synthesizer.NanoOptimization</RootNamespace>
    <AssemblyName>JJ.Demos.Synthesizer.NanoOptimization</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>
    </DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Common.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Collections.Immutable, Version=1.1.37.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\System.Collections.Immutable.1.1.36\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
    </Reference>
    <Reference Include="System.Reflection.Metadata">
      <HintPath>..\..\packages\System.Reflection.Metadata.1.0.21\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
    </Reference>
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="Calculation\WithCSharpCompilation\ExampleOperatorCalculatorOutputCode.cs" />
    <Compile Include="Calculation\WithCSharpCompilation\ExamplePatchCalculatorOutputCode.cs" />
    <Compile Include="Calculation\WithCSharpCompilation\IPatchCalculator.cs" />
    <Compile Include="Calculation\WithInheritance\Add OperatorCalculator Classes Vars.cs">
      <DependentUpon>Add OperatorCalculator Classes Vars.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Calculation\WithInheritance\Add OperatorCalculator Classes Vars_1Const.cs">
      <DependentUpon>Add OperatorCalculator Classes Vars_1Const.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Calculation\WithInheritance\Add_OperatorCalculator_VarArray.cs" />
    <Compile Include="Calculation\WithInheritance\Add_OperatorCalculator_VarArray_1Const.cs" />
    <Compile Include="Calculation\WithCSharpCompilation\IOperatorCalculator.cs" />
    <Compile Include="Calculation\WithInheritance\Number_OperatorCalculator_NaN.cs" />
    <Compile Include="Calculation\WithInheritance\Number_OperatorCalculator_One.cs" />
    <Compile Include="Calculation\WithInheritance\Number_OperatorCalculator_Zero.cs" />
    <Compile Include="Calculation\WithStructs\Add_OperatorCalculator_VarArray_1Const.cs" />
    <Compile Include="Calculation\WithStructs\Add_OperatorCalculator_VarArray.cs" />
    <Compile Include="Calculation\WithStructs\Add OperatorCalculator Classes Vars.cs">
      <DependentUpon>Add OperatorCalculator Classes Vars.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Calculation\WithStructs\Add OperatorCalculator Classes Vars_1Const.cs">
      <DependentUpon>Add OperatorCalculator Classes Vars_1Const.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Calculation\WithStructs\IOperatorCalculator_VarA_VarB.cs" />
    <Compile Include="Calculation\WithStructs\IOperatorCalculator_VarA_ConstB.cs" />
    <Compile Include="Calculation\WithStructs\IOperatorCalculator_Vars_1Const.cs" />
    <Compile Include="Calculation\WithStructs\IOperatorCalculator_Vars.cs" />
    <Compile Include="Calculation\WithStructs\IShift_OperatorCalculator_VarSignal_ConstDistance.cs" />
    <Compile Include="Calculation\WithStructs\IShift_OperatorCalculator_VarSignal_VarDistance.cs" />
    <Compile Include="Calculation\WithStructs\ISine_OperatorCalculator_VarFrequency.cs" />
    <Compile Include="Calculation\WithStructs\Number_OperatorCalculator_NaN.cs" />
    <Compile Include="Calculation\WithStructs\Number_OperatorCalculator_One.cs" />
    <Compile Include="Calculation\WithStructs\Number_OperatorCalculator_Zero.cs" />
    <Compile Include="Dto\OperatorDto_Vars_1Const.cs" />
    <Compile Include="Dto\OperatorDto_Vars.cs" />
    <Compile Include="Dto\Add_OperatorDto_Vars_1Const.cs" />
    <Compile Include="Dto\Add_OperatorDto_Vars.cs" />
    <Compile Include="Dto\OperatorDto_VarA_VarB.cs" />
    <Compile Include="Dto\OperatorDto_VarA_ConstB.cs" />
    <Compile Include="Dto\OperatorDto_ConstA_VarB.cs" />
    <Compile Include="Dto\OperatorDto_ConstA_ConstB.cs" />
    <Compile Include="Dto\Multiply_OperatorDto_ConstA_ConstB.cs" />
    <Compile Include="Dto\MathPropertiesDto.cs" />
    <Compile Include="Dto\Multiply_OperatorDto.cs" />
    <Compile Include="Dto\Add_OperatorDto.cs" />
    <Compile Include="Dto\Multiply_OperatorDto_ConstA_VarB.cs" />
    <Compile Include="Dto\Multiply_OperatorDto_VarA_ConstB.cs" />
    <Compile Include="Dto\Multiply_OperatorDto_VarA_VarB.cs" />
    <Compile Include="Dto\Number_OperatorDto_Zero.cs" />
    <Compile Include="Dto\Number_OperatorDto_One.cs" />
    <Compile Include="Dto\Number_OperatorDto_NaN.cs" />
    <Compile Include="Dto\Number_OperatorDto.cs" />
    <Compile Include="Dto\OperatorDto.cs" />
    <Compile Include="Dto\Shift_OperatorDto.cs" />
    <Compile Include="Dto\Shift_OperatorDto_ConstSignal_ConstDistance.cs" />
    <Compile Include="Dto\Shift_OperatorDto_ConstSignal_VarDistance.cs" />
    <Compile Include="Dto\Shift_OperatorDto_VarSignal_VarDistance.cs" />
    <Compile Include="Dto\Shift_OperatorDto_VarSignal_ConstDistance.cs" />
    <Compile Include="Dto\Sine_OperatorDto.cs" />
    <Compile Include="Dto\OperatorDto_ConstFrequency.cs" />
    <Compile Include="Dto\Sine_OperatorDto_ConstFrequency_NoOriginShifting.cs" />
    <Compile Include="Dto\OperatorDto_VarFrequency.cs" />
    <Compile Include="Dto\Sine_OperatorDto_VarFrequency_NoPhaseTracking.cs" />
    <Compile Include="Dto\Sine_OperatorDto_VarFrequency_WithPhaseTracking.cs" />
    <Compile Include="Dto\VariableInput_OperatorDto.cs" />
    <Compile Include="Helpers\DebugHelper.cs" />
    <Compile Include="Helpers\MathPropertiesHelper.cs" />
    <Compile Include="Helpers\OperatorNames.cs" />
    <Compile Include="Helpers\VisitationCannotBeHandledException.cs" />
    <Compile Include="Helpers\OperatorDtoFactory.cs" />
    <Compile Include="Helpers\WithCSharpCompilation\OperatorCalculatorFactory.cs" />
    <Compile Include="Synthesizer_PerformanceTests_WithCSharpCompilation.cs" />
    <Compile Include="Visitors\WithCSharpCompilation\2016-11-02 Backup of OperatorDtoToCSharpVisitor.cs" />
    <Compile Include="Visitors\WithCSharpCompilation\OperatorDtoToCSharpVisitor.cs" />
    <Compile Include="Visitors\WithCSharpCompilation\OperatorDtoToPatchCalculatorCSharpVisitor.cs" />
    <Compile Include="Visitors\WithCSharpCompilation\OperatorDtoToOperatorCalculatorCSharpVisitor.cs" />
    <Compile Include="Helpers\WithInheritance\OperatorCalculatorFactory.CreateAddCalculator_Vars.cs">
      <DependentUpon>OperatorCalculatorFactory.CreateAddCalculator_Vars.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Helpers\WithInheritance\OperatorCalculatorFactory.CreateAddCalculator_Vars1Const.cs">
      <DependentUpon>OperatorCalculatorFactory.CreateAddCalculator_Vars1Const.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Helpers\WithInheritance\OperatorCalculatorFactory.cs" />
    <Compile Include="Helpers\WithStucts\OperatorCalculatorFactory.cs" />
    <Compile Include="Helpers\TestHelper.cs" />
    <Compile Include="Calculation\DimensionStack.cs" />
    <Compile Include="Calculation\SineCalculator.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Include="Helpers\WithStucts\OperatorDtoToCalculatorTypeConverter.cs" />
    <Compile Include="Synthesizer_PerformanceTests_NoInliningWithInheritance.cs" />
    <Compile Include="Calculation\WithStructs\Number_OperatorCalculator.cs" />
    <Compile Include="Calculation\OperatorCalculatorHelper.cs" />
    <Compile Include="Calculation\WithStructs\Multiply_OperatorCalculator_VarA_ConstB.cs" />
    <Compile Include="Calculation\WithStructs\Multiply_OperatorCalculator_VarA_VarB.cs" />
    <Compile Include="Calculation\WithStructs\IOperatorCalculator.cs" />
    <Compile Include="Calculation\WithStructs\Shift_OperatorCalculator_VarSignal_ConstDistance.cs" />
    <Compile Include="Calculation\WithStructs\Shift_OperatorCalculator_VarSignal_VarDistance.cs" />
    <Compile Include="Calculation\WithStructs\Sine_OperatorCalculator_ConstFrequency_NoOriginShifting.cs" />
    <Compile Include="Calculation\WithStructs\Sine_OperatorCalculator_VarFrequency_NoPhaseTracking.cs" />
    <Compile Include="Calculation\WithStructs\Sine_OperatorCalculator_VarFrequency_WithPhaseTracking.cs" />
    <Compile Include="Calculation\WithStructs\VariableInput_OperatorCalculator.cs" />
    <Compile Include="Calculation\WithInheritance\Multiply_OperatorCalculator_VarA_ConstB.cs" />
    <Compile Include="Calculation\WithInheritance\Multiply_OperatorCalculator_VarA_VarB.cs" />
    <Compile Include="Synthesizer_PerformanceTests_InliningWithStructs.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Calculation\WithInheritance\Number_OperatorCalculator.cs" />
    <Compile Include="Calculation\WithInheritance\OperatorCalculatorBase.cs" />
    <Compile Include="Calculation\WithInheritance\Shift_OperatorCalculator_VarSignal_ConstDifference.cs" />
    <Compile Include="Calculation\WithInheritance\Shift_OperatorCalculator_VarSignal_VarDifference.cs" />
    <Compile Include="Calculation\WithInheritance\Sine_OperatorCalculator_ConstFrequency_NoOriginShifting.cs" />
    <Compile Include="Calculation\WithInheritance\Sine_OperatorCalculator_VarFrequency_NoPhaseTracking.cs" />
    <Compile Include="Calculation\WithInheritance\Sine_OperatorCalculator_VarFrequency_WithPhaseTracking.cs" />
    <Compile Include="Calculation\WithInheritance\VariableInput_OperatorCalculator.cs" />
    <Compile Include="Visitors\MachineOptimization_OperatorDtoVisitor.cs" />
    <Compile Include="Visitors\OperatorDtoVisitorBase.cs" />
    <Compile Include="Visitors\OperatorDtoVisitorBase_AfterMathSimplification.cs" />
    <Compile Include="Visitors\OperatorDtoVisitorBase_AfterClassSpecialization.cs" />
    <Compile Include="Visitors\PreProcessing_OperatorDtoVisitor.cs" />
    <Compile Include="Visitors\MathSimplification_OperatorDtoVisitor.cs" />
    <Compile Include="Visitors\ClassSpecialization_OperatorDtoVisitor.cs" />
    <Compile Include="Visitors\StackLevel_OperatorDtoVisitor_Simple.cs" />
    <Compile Include="Visitors\StackLevel_OperatorDtoVisitor_PerDimensionWriter.cs" />
    <Compile Include="Visitors\WithCSharpCompilation\2016-11-01 Backup of OperatorDtoToOperatorCalculatorVisitor.cs" />
    <Compile Include="Helpers\WithCSharpCompilation\OperatorDtoCompiler.cs" />
    <Compile Include="Visitors\WithCSharpCompilation\ValueInfo.cs" />
    <Compile Include="Visitors\WithInheritance\OperatorDtoToOperatorCalculatorVisitor.cs" />
    <Compile Include="Visitors\WithStructs\OperatorDtoToOperatorCalculatorVisitor.cs" />
    <Compile Include="Visitors\WithStructs\VariableAssignment_OperatorDtoVisitor.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Framework\Common\JJ.Framework.Common.csproj">
      <Project>{44fd9133-5fe7-4824-bd35-27273706d127}</Project>
      <Name>JJ.Framework.Common</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Framework\IO\JJ.Framework.IO.csproj">
      <Project>{c600657b-7e29-44b5-83a1-747fab30d5d0}</Project>
      <Name>JJ.Framework.IO</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Framework\Mathematics\JJ.Framework.Mathematics.csproj">
      <Project>{810b90b9-f501-4b91-b019-2ad5aad63304}</Project>
      <Name>JJ.Framework.Mathematics</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Framework\Reflection\JJ.Framework.Reflection.csproj">
      <Project>{1a8e047c-7893-4918-b415-ce3928e815d8}</Project>
      <Name>JJ.Framework.Reflection</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Framework\Testing\JJ.Framework.Testing.csproj">
      <Project>{369d4e9e-4eff-4699-83b3-c4951ee0a3c3}</Project>
      <Name>JJ.Framework.Testing</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="Dto\Dtos.cd" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Calculation\WithInheritance\Add OperatorCalculator Classes Vars.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Add OperatorCalculator Classes Vars.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Calculation\WithInheritance\Add OperatorCalculator Classes Vars_1Const.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Add OperatorCalculator Classes Vars_1Const.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Calculation\WithStructs\Add OperatorCalculator Classes Vars.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Add OperatorCalculator Classes Vars.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Calculation\WithStructs\Add OperatorCalculator Classes Vars_1Const.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Add OperatorCalculator Classes Vars_1Const.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Helpers\WithInheritance\OperatorCalculatorFactory.CreateAddCalculator_Vars.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>OperatorCalculatorFactory.CreateAddCalculator_Vars.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Helpers\WithInheritance\OperatorCalculatorFactory.CreateAddCalculator_Vars1Const.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>OperatorCalculatorFactory.CreateAddCalculator_Vars1Const.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup />
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PreBuildEvent>del "$(TargetDir)*.cs"</PreBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>