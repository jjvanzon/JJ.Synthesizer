<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ output extension=".cs" #>

<# int minVarOperands = 1; #>
<# int maxVarOperands = 7; #>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using JJ.Framework.Reflection.Exceptions;

namespace JJ.Demos.Synthesizer.NanoOptimization.Calculation.Operators.WithStructs
{

<# 
	for (int i = minVarOperands; i <= maxVarOperands; i++)
	{
#>
		internal interface IOperatorCalculator_<#= i #>Vars_1Const : IOperatorCalculator
		{
			double ConstValue { get; set; }
<# 
			for (int j = 1; j <= i; j++)
			{
#>
				IOperatorCalculator Calculator<#= j #> { get; set; }
<#
			}
#>
		}

<# 
	}
#>
}
